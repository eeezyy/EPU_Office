CREATE TABLE Kategorien (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Bezeichnung VARCHAR(30) NOT NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE Kontakt (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Vorname VARCHAR(40) NOT NULL,
  Nachname VARCHAR(40) NOT NULL,
  Email VARCHAR(50) NOT NULL,
  Telefon VARCHAR(40) NOT NULL,
  BLZ INT(4) NOT NULL,
  Bankinstitut VARCHAR(50) NOT NULL,
  Konto BIGINT(11) NOT NULL,
  Firmenname VARCHAR(50) NOT NULL,
  Strasse VARCHAR(50) NOT NULL,
  Hausnr INT(3) NOT NULL,
  PLZ INT(4) NOT NULL,
  Ort VARCHAR(50) NOT NULL,
  isKunde BOOL NOT NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE Mitarbeiter (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Vorname VARCHAR(20) NOT NULL,
  Nachname VARCHAR(20) NOT NULL,
  Stundensatz DOUBLE NOT NULL,
  Geburtsdatum DATE NOT NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE Buchungszeile (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Datum DATE NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE Angebot (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Name VARCHAR(250) NULL,
  Dauer INTEGER(3) UNSIGNED NOT NULL,
  GueltigAb DATE NOT NULL,
  GueltigBis DATE NOT NULL,
  Chance INT(3) NOT NULL,
  Aenderungsdatum DATE NOT NULL,
  Beschreibung VARCHAR(250) NOT NULL,
  Preis DOUBLE NOT NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE Eingangsrechnung (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Kontakt_ID INTEGER UNSIGNED NOT NULL,
  Scanpfad VARCHAR(50) NULL,
  Datum DATE NOT NULL,
  Preis DOUBLE NOT NULL,
  PRIMARY KEY(ID),
  FOREIGN KEY(Kontakt_ID)
    REFERENCES Kontakt(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Projekt (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Angebot_ID INTEGER UNSIGNED NOT NULL,
  Name VARCHAR(30) NOT NULL,
  Abgeschlossen BOOL NOT NULL,
  Von DATE NOT NULL,
  Bis DATE NOT NULL,
  PRIMARY KEY(ID),
  FOREIGN KEY(Angebot_ID)
    REFERENCES Angebot(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Ausgangsrechnung (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Kontakt_ID INTEGER UNSIGNED NOT NULL,
  Datum DATE NOT NULL,
  Preis DOUBLE NULL,
  PRIMARY KEY(ID),
  FOREIGN KEY(Kontakt_ID)
    REFERENCES Kontakt(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Rechnung (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Ausgangsrechnung_ID INTEGER UNSIGNED NULL,
  Eingangsrechnung_ID INTEGER UNSIGNED NULL,
  Datum DATE NOT NULL,
  isBezahlt BOOL NULL,
  PRIMARY KEY(ID),
  FOREIGN KEY(Eingangsrechnung_ID)
    REFERENCES Eingangsrechnung(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Ausgangsrechnung_ID)
    REFERENCES Ausgangsrechnung(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Rechnungszeilen (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Rechnung_ID INTEGER UNSIGNED NOT NULL,
  Preis DOUBLE NOT NULL,
  Angebot_ID INTEGER UNSIGNED NOT NULL,
  Text VARCHAR(40) NOT NULL,
  PRIMARY KEY(ID, Rechnung_ID),
  FOREIGN KEY(Angebot_ID)
    REFERENCES Angebot(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Rechnung_ID)
    REFERENCES Rechnung(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Projekt_has_Mitarbeiter (
  Projekt_ID INTEGER UNSIGNED NOT NULL,
  Mitarbeiter_ID INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(Projekt_ID, Mitarbeiter_ID),
  FOREIGN KEY(Projekt_ID)
    REFERENCES Projekt(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Mitarbeiter_ID)
    REFERENCES Mitarbeiter(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Kontakt_has_Angebot (
  Kontakt_ID INTEGER UNSIGNED NOT NULL,
  Angebot_ID INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(Kontakt_ID, Angebot_ID),
  FOREIGN KEY(Kontakt_ID)
    REFERENCES Kontakt(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Angebot_ID)
    REFERENCES Angebot(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Arbeitsstunden (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Projekt_ID INTEGER UNSIGNED NOT NULL,
  Mitarbeiter_ID INTEGER UNSIGNED NOT NULL,
  Datum DATE NOT NULL,
  Stunden INTEGER UNSIGNED NOT NULL,
  Taetigkeit VARCHAR(30) NOT NULL,
  PRIMARY KEY(ID, Projekt_ID),
  FOREIGN KEY(Mitarbeiter_ID)
    REFERENCES Mitarbeiter(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Projekt_ID)
    REFERENCES Projekt(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Rechnung_has_Buchungszeile (
  Rechnung_ID INTEGER UNSIGNED NOT NULL,
  Buchungszeile_ID INTEGER UNSIGNED NOT NULL,
  Kategorien_ID INTEGER UNSIGNED NOT NULL,
  Betrag DOUBLE NULL,
  PRIMARY KEY(Rechnung_ID, Buchungszeile_ID),
  FOREIGN KEY(Kategorien_ID)
    REFERENCES Kategorien(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Rechnung_ID)
    REFERENCES Rechnung(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Buchungszeile_ID)
    REFERENCES Buchungszeile(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);


